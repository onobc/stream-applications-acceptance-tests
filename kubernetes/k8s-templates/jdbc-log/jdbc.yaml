apiVersion: apps/v1
kind: Deployment
metadata:
  name: jdbc
  labels:
    app: jdbc
    type: stream-ats
    component: jdbc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jdbc
  template:
    metadata:
      labels:
        app: jdbc
        component: jdbc
    spec:
      containers:
      - name: jdbc
        image: springcloudstream/jdbc-source-kafka:latest
        ports:
        - containerPort: 8080
        env:
          - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
            value: kafka:9092
          - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_ZKNODES
            value: kafka-zk:2181
          - name: SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION
            value: fromjdbcsource
          - name: JDBC_SUPPLIER_QUERY
            value: "select id, name, tag from test order by id"
          - name: SPRING_DATASOURCE_INITIALIZATION-MODE
            value: ALWAYS
          - name: SPRING_DATASOURCE_SCHEMA
            value: https://raw.githubusercontent.com/spring-cloud/spring-cloud-stream-acceptance-tests/master/db-scripts/sample-schema.sql
          - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_REPLICATIONFACTOR
            value: "1"
          - name: LOGGING_FILE_NAME
            value: jdbc-source.log
          - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
            value: logfile,health,info
          - name: SPRING_CLOUD_STREAMAPP_SECURITY_ENABLED
            value: "false"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /actuator/info
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
