apiVersion: apps/v1
kind: Deployment
metadata:
  name: router-sink-kafka
  labels:
    app: router-sink-kafka
    type: stream-ats
    component: router-sink-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: router-sink-kafka
  template:
    metadata:
      labels:
        app: router-sink-kafka
        type: acceptance-tests
        component: router-sink-kafka
    spec:
      containers:
        - name: router-sink
          image: springcloudstream/router-sink-kafka:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: kafka:9092
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_ZKNODES
              value: kafka-zk:2181
            - name: SPRING_CLOUD_STREAM_BINDINGS_INPUT_DESTINATION
              value: http-router-out
            - name: ROUTER_EXPRESSION
              value: payload.contains('a')?'router.foo':'router.bar'
            - name: LOGGING_FILE_NAME
              value: router-sink-kafka.log
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: logfile,health,info
            - name: SPRING_CLOUD_STREAMAPP_SECURITY_ENABLED
              value: "false"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /actuator/info
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
